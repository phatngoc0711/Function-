#Region "  Imports宣言  "
Imports SiU.Process.WebServiceAPI.ServiceCommon
Imports SiU.Process.Common.Functions.CommonMethod
Imports System.Data
Imports ITS.Usolia.Process.Api.Entities.Common
#End Region

''' <summary>
''' Common.Functions.Invoice -- インボイス共通処理
''' </summary>
''' <remarks></remarks>
''' <history version="6.0.0.0" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
Public Class Invoice

    ''制度開始日
    Private dKanri30D1 As Date
    ''免税事業者からの仕入税額控除対象外
    Private nKanri30N1 As Integer
    ''消費税確認画面の端数処理区分
    Private nKanri30N2 As Integer
    ''免税事業者課税区分
    Private dsMei106 As DataSet
    ''免税仕入税額控除割合
    Private dsMei107 As DataSet
    ''課税区分マスタ
    Private dsKazei As DataSet
    ''キッシュ登録 InvoiceMaster
    Private lTotalInvoiceMaster As New List(Of InvoiceMaster)
    ''キッシュ登録 InvoiceRecord
    Private lTotalInvoiceRecord As New List(Of InvoiceRecord)

    ''適格請求書発行事業者判定（課税区分）- コード
    Private nKazeiKbnCode As Integer
    ''適格請求書発行事業者判定（課税区分）- 略称
    Private xKazeiKbnNote As String
    ''加算後の税抜金額
    Private nZeinuKasan As Decimal
    ''減算後の消費税額
    Private nShihizeiGakuGenzan As Decimal

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_TotalInvoiceRecord() As List(Of InvoiceRecord)
        Return lTotalInvoiceRecord
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_TotalInvoiceMaster() As List(Of InvoiceMaster)
        Return lTotalInvoiceMaster
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_KazeiKbnCode() As Integer
        Return nKazeiKbnCode
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_KazeiKbnNote() As String
        Return xKazeiKbnNote
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_ZeinuKasan() As Decimal
        Return nZeinuKasan
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_ShihizeiGakuGenzan() As Decimal
        Return nShihizeiGakuGenzan
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Sub Invoice_Get_Init_Value(ByRef pWsCommon As ServiceCommon)
        Dim ds As DataSet

        dsMei106 = Invoice_Get_M_Mei_106(pWsCommon)
        dsMei107 = Invoice_Get_M_Mei_107(pWsCommon)
        ds = Invoice_Get_Invoice_Kanri_30(pWsCommon)
        dKanri30D1 = fToDate(ds.Tables(0).Rows(0).Item("DATE1"))
        nKanri30N1 = fToInt(ds.Tables(0).Rows(0).Item("NUMBER1"))
        nKanri30N2 = fToInt(ds.Tables(0).Rows(0).Item("NUMBER2"))
        dsKazei = Invoice_Get_Invoice_Kazei(pWsCommon)

    End Sub

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Invoice_Kanri_30(ByRef pWsCommon As ServiceCommon) As DataSet

        Dim ds As New DataSet

        Try
            ds = pWsCommon.Invoice_Get_Invoice_Kanri_30()
        Catch ex As Exception
            Throw ex
        End Try
        Return ds
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Invoice_Kazei(ByRef pWsCommon As ServiceCommon) As DataSet

        Dim ds As New DataSet

        Try
            ds = pWsCommon.Invoice_Get_Invoice_Kazei()

        Catch ex As Exception
            Throw ex
        End Try
        Return ds
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_M_Mei_106(ByRef pWsCommon As ServiceCommon) As DataSet

        Dim ds As New DataSet

        Try
            ds = pWsCommon.Invoice_Get_M_Mei_106()

        Catch ex As Exception
            Throw ex
        End Try
        Return ds
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_M_Mei_107(ByRef pWsCommon As ServiceCommon) As DataSet

        Dim ds As New DataSet

        Try
            ds = pWsCommon.Invoice_Get_M_Mei_107()

        Catch ex As Exception
            Throw ex
        End Try
        Return ds
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <param name="xTor"></param>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_M_Invoice(ByRef pWsCommon As ServiceCommon,
                                                xTor As String) As DataSet

        Dim ds As New DataSet

        Try
            ds = pWsCommon.Invoice_Get_M_Invoice(xTor)

        Catch ex As Exception
            Throw ex
        End Try
        Return ds
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <param name="xRegistratedNumber"></param>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_VR_Invoice(ByRef pWsCommon As ServiceCommon,
                                                 xRegistratedNumber As String) As DataSet

        Dim ds As New DataSet

        Try
            ds = pWsCommon.Invoice_Get_VR_Invoice(xRegistratedNumber)

        Catch ex As Exception
            Throw ex
        End Try
        Return ds
    End Function

    ''' <summary>
    ''' No1.課税区分設定エラーチェック
    ''' </summary>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Check_Error(ByRef xErrorMessage As String) As Boolean
        Dim nIndex As Integer
        Dim nIndex_J As Integer
        Dim nCount As Integer
        Dim nCount_J As Integer

        If dsKazei Is Nothing OrElse
            dsKazei.Tables.Count = 0 OrElse
            dsKazei.Tables(0).Rows.Count = 0 OrElse
            dsMei106 Is Nothing OrElse
            dsMei106.Tables.Count = 0 OrElse
            dsMei106.Tables(0).Rows.Count = 0 Then
            xErrorMessage = "課税仕入に該当する課税区分コードが、名称マスタ(106)に設定されていません。マスタの設定をご確認下さい。"
            Return False
        End If

        For nIndex = 0 To dsMei106.Tables(0).Rows.Count - 1
            If fToText(dsMei106.Tables(0).Rows(nIndex).Item("NUMBER1")) = "" Then
                xErrorMessage = "課税仕入に該当する課税区分コードが、名称マスタ(106)に設定されていません。マスタの設定をご確認下さい。"
                Return False
            End If
        Next

        For nIndex = 0 To dsKazei.Tables(0).Rows.Count - 1
            nCount = 0
            For nIndex_J = 0 To dsMei106.Tables(0).Rows.Count - 1
                If fToInt(dsKazei.Tables(0).Rows(nIndex).Item("CODE")) = fToInt(dsMei106.Tables(0).Rows(nIndex_J).Item("NUMBER1")) OrElse
                    fToInt(dsKazei.Tables(0).Rows(nIndex).Item("CODE")) = fToInt(dsMei106.Tables(0).Rows(nIndex_J).Item("CODE")) Then
                    nCount = nCount + 1
                    Exit For
                End If
            Next
            If nCount = 0 Then
                xErrorMessage = "課税仕入に該当する課税区分コードが、名称マスタ(106)に設定されていません。マスタの設定をご確認下さい。"
                Return False
                Exit For
            End If
        Next

        For nIndex = 0 To dsMei106.Tables(0).Rows.Count - 1
            nCount = 0
            nCount_J = 0
            For nIndex_J = 0 To dsKazei.Tables(0).Rows.Count - 1
                If fToInt(dsMei106.Tables(0).Rows(nIndex).Item("NUMBER1")) = fToInt(dsKazei.Tables(0).Rows(nIndex_J).Item("CODE")) Then
                    nCount = nCount + 1
                End If
                If fToInt(dsMei106.Tables(0).Rows(nIndex).Item("CODE")) = fToInt(dsKazei.Tables(0).Rows(nIndex_J).Item("CODE")) Then
                    nCount_J = nCount_J + 1
                End If
            Next
            If nCount = 0 OrElse
                nCount_J = 0 Then
                xErrorMessage = "名称マスタ(106)に、課税仕入に該当する課税区分コードが設定されていません。マスタの設定をご確認下さい。"
                Return False
                Exit For
            End If
        Next

        For nIndex = 0 To dsMei106.Tables(0).Rows.Count - 2
            For nIndex_J = nIndex + 1 To dsMei106.Tables(0).Rows.Count - 1
                If fToInt(dsMei106.Tables(0).Rows(nIndex).Item("NUMBER1")) = fToInt(dsMei106.Tables(0).Rows(nIndex_J).Item("NUMBER1")) Then
                    xErrorMessage = "名称マスタ(106)に、重複した課税区分コードが設定されています。マスタの設定をご確認下さい。"
                    Return False
                End If
            Next
        Next

        For nIndex = 0 To dsMei106.Tables(0).Rows.Count - 1
            For nIndex_J = 0 To dsMei106.Tables(0).Rows.Count - 1
                If fToInt(dsMei106.Tables(0).Rows(nIndex).Item("NUMBER1")) = fToInt(dsMei106.Tables(0).Rows(nIndex_J).Item("CODE")) Then
                    xErrorMessage = "名称マスタ(106)の、適格請求書発行事業者課税区分、免税事業者課税区分　双方に同一のコードが設定されています。マスタの設定をご確認下さい。"
                    Return False
                End If
            Next
        Next
        Return True
    End Function

    ''' <summary>
    ''' 1.起動時処理
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_ProcessStartup(ByRef pWsCommon As ServiceCommon,
                                           ByRef xErrorMessage As String) As Boolean
        Invoice_Get_Init_Value(pWsCommon)
        If Invoice_Check_Error(xErrorMessage) = False Then
            Return False
        End If
        Return True
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="dShiire" ></param>
    ''' <param name="xTor"></param>
    ''' <param name="nKazeiKbn"></param>
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Check_Get_Parameter(dShiire As Date,
                                                xTor As String,
                                                nKazeiKbn As Integer) As Boolean
        If dShiire = Nothing OrElse
            xTor Is Nothing OrElse
            nKazeiKbn = Nothing Then
            Return False
        End If
        If dShiire = SysMinDate OrElse
            dShiire = SysMaxDate Then
            Return False
        End If
        If xTor.Trim = "" Then
            Return False
        End If
        Return True
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="dShiire"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Is_Valid_Shiire(dShiire As Date) As Boolean
        If dKanri30D1 = SysMinDate Then
            Return False
        End If
        If dShiire < dKanri30D1 Then
            Return False
        End If
        Return True
    End Function

    ''' <summary>
    ''' No4.適格請求書発行事業者判定(課税区分)
    ''' </summary>
    ''' <param name="nKazeiKbn"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Is_Kazei_Kbn(nKazeiKbn As Integer) As ArrayList
        Dim ar As ArrayList = New ArrayList()
        Dim nIndex As Integer
        Dim nCount As Integer

        nCount = 0
        For nIndex = 0 To dsMei106.Tables(0).Rows.Count - 1
            If nKazeiKbn = fToInt(dsMei106.Tables(0).Rows(nIndex).Item("NUMBER1")) Then
                ar.Add(0)
                ar.Add("免税")
                nCount = 1
                Exit For
            ElseIf nKazeiKbn = fToInt(dsMei106.Tables(0).Rows(nIndex).Item("CODE")) Then
                ar.Add(1)
                ar.Add("適格")
                nCount = 1
                Exit For
            End If
        Next
        If nCount = 0 Then
            ar.Add(Nothing)
        End If
        Return ar
    End Function

    ''' <summary>
    ''' No2.適格請求書発行事業者履歴情報取得 : Invoice_Master
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <param name="xTor"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Kazei_Kbn_Invoice_Master(ByRef pWsCommon As ServiceCommon,
                                                               xTor As String) As InvoiceMaster
        Dim cInvoiceMaster As InvoiceMaster
        Dim dsM As DataSet
        Dim nInvoiceCheck As Integer
        Dim xRegistratedNumber As String

        dsM = Invoice_Get_M_Invoice(pWsCommon, xTor)

        If dsM.Tables(0).Rows.Count > 0 Then
            nInvoiceCheck = fToInt(dsM.Tables(0).Rows(0).Item("INVOICE_CHECK"))
            xRegistratedNumber = fToText(dsM.Tables(0).Rows(0).Item("REGISTRATED_NUMBER"))
            cInvoiceMaster = New InvoiceMaster With {
                             .xTor = xTor,
                             .nInvoiceCheck = nInvoiceCheck,
                             .xRegistratedNumber = xRegistratedNumber
                         }
        Else
            cInvoiceMaster = New InvoiceMaster With {
                             .xTor = xTor,
                             .nInvoiceCheck = 0,
                             .xRegistratedNumber = ""
                         }
        End If
        Return cInvoiceMaster
    End Function

    ''' <summary>
    ''' No2.適格請求書発行事業者履歴情報取得 : Invoice_Record
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param> 
    ''' <param name="xTor"></param> 
    ''' <param name="cInvoiceMaster"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Kazei_Kbn_Invoice_Record(ByRef pWsCommon As ServiceCommon,
                                                               xTor As String,
                                                               cInvoiceMaster As InvoiceMaster) As List(Of InvoiceRecord)
        Dim lInvoiceRecord As New List(Of InvoiceRecord)
        Dim dRegistrationDate As Date
        Dim dDisposalDate As Date
        Dim dExpireDate As Date
        Dim dChangeDate As Date
        Dim bIsNoRecord As Boolean

        Dim dsVR As DataSet
        Dim xRegistratedNumber As String
        Dim nIndex As Integer

        If cInvoiceMaster.nInvoiceCheck = 9 Then
            xRegistratedNumber = cInvoiceMaster.xRegistratedNumber
            dsVR = Invoice_Get_VR_Invoice(pWsCommon, xRegistratedNumber)

            If dsVR.Tables(0).Rows.Count > 0 Then
                For nIndex = 0 To dsVR.Tables(0).Rows.Count - 1
                    Dim cInvoiceRecord As InvoiceRecord

                    If IsNothing(dsVR.Tables(0).Rows(nIndex).Item("REGISTRATION_DATE")) = True Then
                        dRegistrationDate = Nothing
                    Else
                        dRegistrationDate = fToDate(dsVR.Tables(0).Rows(nIndex).Item("REGISTRATION_DATE"))
                    End If
                    If IsNothing(dsVR.Tables(0).Rows(nIndex).Item("DISPOSAL_DATE")) = True Then
                        dDisposalDate = Nothing
                    Else
                        dDisposalDate = fToDate(dsVR.Tables(0).Rows(nIndex).Item("DISPOSAL_DATE"))
                    End If
                    If IsNothing(dsVR.Tables(0).Rows(nIndex).Item("EXPIRE_DATE")) = True Then
                        dExpireDate = Nothing
                    Else
                        dExpireDate = fToDate(dsVR.Tables(0).Rows(nIndex).Item("EXPIRE_DATE"))
                    End If
                    If IsNothing(dsVR.Tables(0).Rows(nIndex).Item("CHANGE_DATE")) = True Then
                        dChangeDate = Nothing
                    Else
                        dChangeDate = fToDate(dsVR.Tables(0).Rows(nIndex).Item("CHANGE_DATE"))
                    End If

                    bIsNoRecord = False

                    cInvoiceRecord = New InvoiceRecord With {
                             .xTor = xTor,
                             .dRegistrationDate = dRegistrationDate,
                             .dDisposalDate = dDisposalDate,
                             .dExpireDate = dExpireDate,
                             .dChangeDate = dChangeDate,
                             .bIsNoRecord = bIsNoRecord
                         }
                    lInvoiceRecord.Add(cInvoiceRecord)

                Next
            Else
                Dim cInvoiceRecord As InvoiceRecord
                cInvoiceRecord = New InvoiceRecord With {
                             .xTor = xTor,
                             .dRegistrationDate = Nothing,
                             .dDisposalDate = Nothing,
                             .dExpireDate = Nothing,
                             .dChangeDate = Nothing,
                             .bIsNoRecord = True
                         }
                lInvoiceRecord.Add(cInvoiceRecord)
            End If

        End If
        Return lInvoiceRecord
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="xTor"></param> 
    ''' <param name="lCache"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Check_Exist_In_Cache(xTor As String,
                                                 lCache As List(Of InvoiceMaster)) As Boolean
        Dim nIndex As Integer
        For nIndex = 0 To lCache.Count - 1
            If xTor = lCache(nIndex).xTor Then
                Return True
            End If
        Next
        Return False
    End Function

    ''' <summary>
    ''' No3.適格請求書発行事業者判定(取引先)
    ''' </summary>
    ''' <param name="lInvoiceMaster"></param> 
    ''' <param name="lInvoiceRecord"></param> 
    ''' <param name="xTor"></param> 
    ''' <param name="dShiire"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Check_Eligible_Invoice(lInvoiceMaster As List(Of InvoiceMaster),
                                                   lInvoiceRecord As List(Of InvoiceRecord),
                                                   xTor As String,
                                                   dShiire As Date) As Integer
        Dim nIndex As Integer
        Dim nIndex_J As Integer
        Dim nCount As Integer
        Dim dMaxChangeDate As Date
        Dim nIndexMaxChangeDate As Integer
        For nIndex = 0 To lInvoiceMaster.Count - 1
            If xTor = lInvoiceMaster(nIndex).xTor Then
                If lInvoiceMaster(nIndex).nInvoiceCheck = 1 Then
                    Return 1
                ElseIf lInvoiceMaster(nIndex).nInvoiceCheck = 0 Then
                    Return 0
                Else
                    nCount = 0
                    dMaxChangeDate = lInvoiceRecord(0).dChangeDate
                    nIndexMaxChangeDate = 0
                    For nIndex_J = 0 To lInvoiceRecord.Count - 1
                        If xTor = lInvoiceRecord(nIndex_J).xTor And dShiire >= lInvoiceRecord(nIndex_J).dChangeDate And lInvoiceRecord(nIndex_J).bIsNoRecord = False Then
                            nCount = nCount + 1
                            If lInvoiceRecord(nIndex_J).dChangeDate > dMaxChangeDate Then
                                dMaxChangeDate = lInvoiceRecord(nIndex_J).dChangeDate
                                nIndexMaxChangeDate = nIndex_J
                            End If
                        End If
                    Next
                    If nCount = 0 Then
                        Return 0
                    Else
                        If lInvoiceRecord(nIndexMaxChangeDate).dDisposalDate = Nothing Or lInvoiceRecord(nIndexMaxChangeDate).dExpireDate = Nothing Then
                            Return 1
                        Else
                            Return 0
                        End If
                    End If
                End If
            End If
        Next
    End Function

    ''' <summary>
    ''' 2.入力時処理 - 適格請求書発行事業者判定変換
    ''' </summary>
    ''' <param name="pWsCommon">制御系Webサービスのインスタンス</param>
    ''' <param name="dShiire"></param> 
    ''' <param name="xTor"></param> 
    ''' <param name="nKazeiKbn"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Determine_Tax(ByRef pWsCommon As ServiceCommon,
                                                dShiire As Date,
                                                xTor As String,
                                                nKazeiKbn As Integer) As Boolean
        Dim aNo4 As ArrayList = New ArrayList()
        Dim nEligibleInvoice As Integer
        Dim nIndex As Integer
        If Invoice_Check_Get_Parameter(dShiire, xTor, nKazeiKbn) = False Then
            Return False
        End If
        If (Invoice_Is_Valid_Shiire(dShiire)) = False Then
            Return False
        End If
        aNo4 = Invoice_Is_Kazei_Kbn(nKazeiKbn)
        If aNo4(0) Is Nothing Then
            Return False
        End If
        If Invoice_Check_Exist_In_Cache(xTor, lTotalInvoiceMaster) = False Then
            Dim cInvoiceMaster As InvoiceMaster
            cInvoiceMaster = Invoice_Get_Kazei_Kbn_Invoice_Master(pWsCommon, xTor)
            lTotalInvoiceMaster.Add(cInvoiceMaster)

            Dim lInvoiceRecord As List(Of InvoiceRecord)
            lInvoiceRecord = Invoice_Get_Kazei_Kbn_Invoice_Record(pWsCommon, xTor, cInvoiceMaster)
            For nIndex = 0 To lInvoiceRecord.Count - 1
                lTotalInvoiceRecord.Add(lInvoiceRecord(nIndex))
            Next
        End If
        nEligibleInvoice = Invoice_Check_Eligible_Invoice(lTotalInvoiceMaster, lTotalInvoiceRecord, xTor, dShiire)

        If fToInt(aNo4(0)) = nEligibleInvoice Then
            Return False
        Else
            nKazeiKbnCode = fToInt(aNo4(0))
            xKazeiKbnNote = fToText(aNo4(1))
        End If
        Return True
    End Function

    ''' <summary>
    ''' No5.仕入税額控除対象割合取得
    ''' </summary>
    ''' <param name="dShiire"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Tax_Percent(dShiire As Date) As Integer
        Dim nDateMax As Integer
        Dim nIndex As Integer
        Dim xShiire As String
        Dim nCheck As Integer
        Dim nKojoTaiShoWariai As Integer

        If dsMei107 Is Nothing OrElse
            dsMei107.Tables.Count = 0 OrElse
            dsMei107.Tables(0).Rows.Count = 0 Then
            Return -1
        End If

        xShiire = dShiire.Year.ToString + dShiire.Month.ToString + dShiire.Day.ToString
        nDateMax = fToInt(dsMei107.Tables(0).Rows(0).Item("NUMBER1"))
        nCheck = 0
        nKojoTaiShoWariai = fToInt(dsMei107.Tables(0).Rows(0).Item("NUMBER2"))
        For nIndex = 0 To dsMei107.Tables(0).Rows.Count - 1
            Dim nNumber1 As Integer
            nNumber1 = fToInt(dsMei107.Tables(0).Rows(nIndex).Item("NUMBER1"))
            If nNumber1 > fToInt(xShiire) Then
                If nNumber1 > nDateMax Then
                    nDateMax = nNumber1
                    nKojoTaiShoWariai = fToInt(dsMei107.Tables(0).Rows(nIndex).Item("NUMBER2"))
                End If
                nCheck = nCheck + 1
            End If
        Next

        If nCheck = 0 Then
            Return -1
        End If
        Return nKojoTaiShoWariai
    End Function

    ''' <summary>
    ''' ワークテーブルのデータ取得
    ''' </summary>
    ''' <param name="bCheck"></param>  
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Hasu(ByRef bCheck As Boolean) As BrowseHasu
        If nKanri30N2 = 1 Then
            Return BrowseHasu.bHasu_Kiriage
        ElseIf nKanri30N2 = 2 Then
            Return BrowseHasu.bHasu_Kirisute
        ElseIf nKanri30N2 = 3 Then
            Return BrowseHasu.bHasu_Shisyagonyu
        Else
            bCheck = False
        End If
    End Function

    ''' <summary>
    ''' No6.経過措置対応
    ''' </summary>
    ''' <param name="nTaxPercent"></param> 
    ''' <param name="nKin"></param> 
    ''' <param name="nShohiZei"></param> 
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Sub Invoice_Get_Temporary_Measures(nTaxPercent As Integer,
                                              nKin As Decimal,
                                              nShohiZei As Decimal,
                                              ByRef bCheck As Boolean)
        ''消費税額 ×（100 - 控除対象）×0.01
        Dim nCalculate As Double
        Dim nRoundCalculate As Decimal
        nCalculate = nShohiZei * (100 - nTaxPercent) * 0.01
        ''Rounding
        nRoundCalculate = fRound(nCalculate, Invoice_Get_Hasu(bCheck), 1)
        nZeinuKasan = nKin + nRoundCalculate
        nShihizeiGakuGenzan = nShohiZei - nRoundCalculate
    End Sub

    ''' <summary>
    ''' 3.入力時処理 - 免税事業者経過措置対応
    ''' </summary>
    ''' <param name="dShiire"></param> 
    ''' <param name="nKin"></param> 
    ''' <param name="nShohiZei"></param> 
    ''' <returns>ワークテーブルのデータ</returns>
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Cost_FreeTax(dShiire As Date,
                                             nKin As Decimal,
                                             nShohiZei As Decimal) As Boolean
        Dim lTempMeasures As ArrayList = New ArrayList()
        Dim nTaxPercent As Integer
        Dim bCheckKanri30N2 As Boolean
        bCheckKanri30N2 = True
        nTaxPercent = Invoice_Get_Tax_Percent(dShiire)
        If nKanri30N1 <> 1 Then
            Return False
        End If
        If nKazeiKbnCode <> 0 Then
            Return False
        End If
        If nTaxPercent = -1 Then
            Return False
        End If
        Invoice_Get_Temporary_Measures(nTaxPercent, nKin, nShohiZei, bCheckKanri30N2)
        If bCheckKanri30N2 = False Then
            Return False
        End If
        Return True
    End Function

    ''' <summary>
    ''' 11.課税区分名称表示
    ''' </summary>
    ''' <param name="nKazeiKbn"></param> 
    ''' <history version="1" date="2023.02.24" name="PHAT-LN">インボイス共通処理</history>
    <DebuggerStepThrough()>
    Public Function Invoice_Get_Note_Label(nKazeiKbn As Integer) As Boolean
        Dim aNo4 As ArrayList = New ArrayList()
        aNo4 = Invoice_Is_Kazei_Kbn(nKazeiKbn)
        If aNo4(0) Is Nothing Then
            Return False
        End If
        xKazeiKbnNote = fToText(aNo4(1))
        Return True
    End Function

End Class
